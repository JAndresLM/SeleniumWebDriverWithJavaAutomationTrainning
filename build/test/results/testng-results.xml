<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" total="13" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="Automation Training No Grid" duration-ms="148680" started-at="2017-10-11T21:26:23Z" finished-at="2017-10-11T21:28:52Z">
    <groups>
    </groups>
    <test name="ChromeFunctionalTesting" duration-ms="148680" started-at="2017-10-11T21:26:23Z" finished-at="2017-10-11T21:28:52Z">
      <class name="tests.LoginTest">
        <test-method status="PASS" signature="printStartingExecution(java.lang.String)[pri:0, instance:tests.LoginTest@71e7a66b]" name="printStartingExecution" is-config="true" duration-ms="15" started-at="2017-10-11T15:26:23Z" finished-at="2017-10-11T15:26:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://192.168.0.103:86/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printStartingExecution -->
        <test-method status="PASS" signature="saveReport(org.testng.ITestContext)[pri:0, instance:tests.LoginTest@71e7a66b]" name="saveReport" is-config="true" duration-ms="49" started-at="2017-10-11T15:26:23Z" depends-on-methods="tests.BaseTest.printStartingExecution" finished-at="2017-10-11T15:26:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2d209079]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveReport -->
        <test-method status="PASS" signature="setUpTestClass()[pri:0, instance:tests.LoginTest@71e7a66b]" name="setUpTestClass" is-config="true" duration-ms="2" started-at="2017-10-11T15:26:23Z" finished-at="2017-10-11T15:26:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTestClass -->
        <test-method status="PASS" signature="setupTestCase(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest@71e7a66b]" name="setupTestCase" is-config="true" duration-ms="7563" started-at="2017-10-11T15:26:23Z" finished-at="2017-10-11T15:26:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Local]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WINDOWS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTestCase -->
        <test-method status="PASS" signature="testVerifyThatLoginPageIsDisplayedWhenUserClickLoginLink()[pri:0, instance:tests.LoginTest@71e7a66b]" name="testVerifyThatLoginPageIsDisplayedWhenUserClickLoginLink" duration-ms="1951" started-at="2017-10-11T15:26:31Z" finished-at="2017-10-11T15:26:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyThatLoginPageIsDisplayedWhenUserClickLoginLink -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@71e7a66b]" name="afterMethod" is-config="true" duration-ms="1716" started-at="2017-10-11T15:26:33Z" finished-at="2017-10-11T15:26:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyThatLoginPageIsDisplayedWhenUserClickLoginLink status=SUCCESS method=LoginTest.testVerifyThatLoginPageIsDisplayedWhenUserClickLoginLink()[pri:0, instance:tests.LoginTest@71e7a66b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setupTestCase(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest@71e7a66b]" name="setupTestCase" is-config="true" duration-ms="8394" started-at="2017-10-11T15:26:34Z" finished-at="2017-10-11T15:26:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Local]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WINDOWS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTestCase -->
        <test-method status="FAIL" signature="testVerifyThatLoginPageTitleIsCorrectWhenUserClickLoginButtonSeveralTimes()[pri:0, instance:tests.LoginTest@71e7a66b]" name="testVerifyThatLoginPageTitleIsCorrectWhenUserClickLoginButtonSeveralTimes" duration-ms="1802" started-at="2017-10-11T15:26:43Z" finished-at="2017-10-11T15:26:44Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
null, null, null, null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
null, null, null, null
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)
	at tests.LoginTest.testVerifyThatLoginPageTitleIsCorrectWhenUserClickLoginButtonSeveralTimes(LoginTest.java:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyThatLoginPageTitleIsCorrectWhenUserClickLoginButtonSeveralTimes -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@71e7a66b]" name="afterMethod" is-config="true" duration-ms="2299" started-at="2017-10-11T15:26:44Z" finished-at="2017-10-11T15:26:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyThatLoginPageTitleIsCorrectWhenUserClickLoginButtonSeveralTimes status=FAILURE method=LoginTest.testVerifyThatLoginPageTitleIsCorrectWhenUserClickLoginButtonSeveralTimes()[pri:0, instance:tests.LoginTest@71e7a66b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setupTestCase(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest@71e7a66b]" name="setupTestCase" is-config="true" duration-ms="7516" started-at="2017-10-11T15:26:47Z" finished-at="2017-10-11T15:26:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Local]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WINDOWS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTestCase -->
        <test-method status="FAIL" signature="testVerifyThatUserIsAbleToLoginWithValidCredentials()[pri:0, instance:tests.LoginTest@71e7a66b]" name="testVerifyThatUserIsAbleToLoginWithValidCredentials" duration-ms="2045" started-at="2017-10-11T15:26:54Z" finished-at="2017-10-11T15:26:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at tests.LoginTest.testVerifyThatUserIsAbleToLoginWithValidCredentials(LoginTest.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyThatUserIsAbleToLoginWithValidCredentials -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@71e7a66b]" name="afterMethod" is-config="true" duration-ms="1651" started-at="2017-10-11T15:26:56Z" finished-at="2017-10-11T15:26:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyThatUserIsAbleToLoginWithValidCredentials status=FAILURE method=LoginTest.testVerifyThatUserIsAbleToLoginWithValidCredentials()[pri:0, instance:tests.LoginTest@71e7a66b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setupTestCase(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest@71e7a66b]" name="setupTestCase" is-config="true" duration-ms="6369" started-at="2017-10-11T15:26:58Z" finished-at="2017-10-11T15:27:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Local]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WINDOWS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTestCase -->
        <test-method status="PASS" signature="testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials(java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest@71e7a66b]" name="testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials" duration-ms="2835" started-at="2017-10-11T15:27:04Z" data-provider="incorrectUserNamesAndPasswords" finished-at="2017-10-11T15:27:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Fernando]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Solis]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@71e7a66b]" name="afterMethod" is-config="true" duration-ms="1625" started-at="2017-10-11T15:27:07Z" finished-at="2017-10-11T15:27:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials status=SUCCESS method=LoginTest.testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials(java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest@71e7a66b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setupTestCase(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest@71e7a66b]" name="setupTestCase" is-config="true" duration-ms="7553" started-at="2017-10-11T15:27:09Z" finished-at="2017-10-11T15:27:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Local]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WINDOWS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTestCase -->
        <test-method status="PASS" signature="testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials(java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest@71e7a66b]" name="testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials" duration-ms="2016" started-at="2017-10-11T15:27:16Z" data-provider="incorrectUserNamesAndPasswords" finished-at="2017-10-11T15:27:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Andres]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Lopez]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@71e7a66b]" name="afterMethod" is-config="true" duration-ms="1509" started-at="2017-10-11T15:27:18Z" finished-at="2017-10-11T15:27:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials status=SUCCESS method=LoginTest.testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials(java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest@71e7a66b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setupTestCase(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest@71e7a66b]" name="setupTestCase" is-config="true" duration-ms="5920" started-at="2017-10-11T15:27:20Z" finished-at="2017-10-11T15:27:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Local]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WINDOWS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTestCase -->
        <test-method status="PASS" signature="testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials(java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest@71e7a66b]" name="testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials" duration-ms="2762" started-at="2017-10-11T15:27:26Z" data-provider="incorrectUserNamesAndPasswords" finished-at="2017-10-11T15:27:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Rebeca]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Najera]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@71e7a66b]" name="afterMethod" is-config="true" duration-ms="1661" started-at="2017-10-11T15:27:29Z" finished-at="2017-10-11T15:27:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials status=SUCCESS method=LoginTest.testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials(java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest@71e7a66b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setupTestCase(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest@71e7a66b]" name="setupTestCase" is-config="true" duration-ms="6542" started-at="2017-10-11T15:27:30Z" finished-at="2017-10-11T15:27:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Local]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WINDOWS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTestCase -->
        <test-method status="PASS" signature="testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials(java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest@71e7a66b]" name="testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials" duration-ms="2512" started-at="2017-10-11T15:27:37Z" data-provider="incorrectUserNamesAndPasswords" finished-at="2017-10-11T15:27:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Brian]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Salazar]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@71e7a66b]" name="afterMethod" is-config="true" duration-ms="1890" started-at="2017-10-11T15:27:39Z" finished-at="2017-10-11T15:27:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials status=SUCCESS method=LoginTest.testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials(java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest@71e7a66b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setupTestCase(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest@71e7a66b]" name="setupTestCase" is-config="true" duration-ms="10830" started-at="2017-10-11T15:27:41Z" finished-at="2017-10-11T15:27:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Local]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WINDOWS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTestCase -->
        <test-method status="PASS" signature="testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials(java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest@71e7a66b]" name="testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials" duration-ms="3314" started-at="2017-10-11T15:27:52Z" data-provider="incorrectUserNamesAndPasswords" finished-at="2017-10-11T15:27:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Laurens]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chaves]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@71e7a66b]" name="afterMethod" is-config="true" duration-ms="1780" started-at="2017-10-11T15:27:55Z" finished-at="2017-10-11T15:27:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials status=SUCCESS method=LoginTest.testVerifyThatUserIsNotAbleToLoginWithInvalidCredentials(java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest@71e7a66b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.LoginTest@71e7a66b]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-10-11T15:27:57Z" finished-at="2017-10-11T15:27:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.LoginTest@71e7a66b]" name="afterTest" is-config="true" duration-ms="10" started-at="2017-10-11T15:28:52Z" finished-at="2017-10-11T15:28:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.RegisterTest">
        <test-method status="PASS" signature="setupTestCase(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.RegisterTest@7a92922]" name="setupTestCase" is-config="true" duration-ms="6736" started-at="2017-10-11T15:27:57Z" finished-at="2017-10-11T15:28:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Local]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WINDOWS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTestCase -->
        <test-method status="PASS" signature="setUpTestClass()[pri:0, instance:tests.RegisterTest@7a92922]" name="setUpTestClass" is-config="true" duration-ms="0" started-at="2017-10-11T15:27:57Z" finished-at="2017-10-11T15:27:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTestClass -->
        <test-method status="PASS" signature="verifyThatAllMandatoryMessagesAreDisplayedWhenAllMandatoryFieldsAreEmptyAfterClickSubmitButton()[pri:0, instance:tests.RegisterTest@7a92922]" name="verifyThatAllMandatoryMessagesAreDisplayedWhenAllMandatoryFieldsAreEmptyAfterClickSubmitButton" duration-ms="2531" started-at="2017-10-11T15:28:04Z" finished-at="2017-10-11T15:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThatAllMandatoryMessagesAreDisplayedWhenAllMandatoryFieldsAreEmptyAfterClickSubmitButton -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegisterTest@7a92922]" name="afterMethod" is-config="true" duration-ms="1645" started-at="2017-10-11T15:28:06Z" finished-at="2017-10-11T15:28:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThatAllMandatoryMessagesAreDisplayedWhenAllMandatoryFieldsAreEmptyAfterClickSubmitButton status=SUCCESS method=RegisterTest.verifyThatAllMandatoryMessagesAreDisplayedWhenAllMandatoryFieldsAreEmptyAfterClickSubmitButton()[pri:0, instance:tests.RegisterTest@7a92922] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setupTestCase(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.RegisterTest@7a92922]" name="setupTestCase" is-config="true" duration-ms="6447" started-at="2017-10-11T15:28:08Z" finished-at="2017-10-11T15:28:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Local]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WINDOWS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTestCase -->
        <test-method status="PASS" signature="verifyThatErrorMessageIsDisplayedWhenCreatingUserWithUserNameThatIsAlreadyTaken()[pri:0, instance:tests.RegisterTest@7a92922]" name="verifyThatErrorMessageIsDisplayedWhenCreatingUserWithUserNameThatIsAlreadyTaken" duration-ms="3334" started-at="2017-10-11T15:28:14Z" finished-at="2017-10-11T15:28:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThatErrorMessageIsDisplayedWhenCreatingUserWithUserNameThatIsAlreadyTaken -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegisterTest@7a92922]" name="afterMethod" is-config="true" duration-ms="1579" started-at="2017-10-11T15:28:18Z" finished-at="2017-10-11T15:28:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThatErrorMessageIsDisplayedWhenCreatingUserWithUserNameThatIsAlreadyTaken status=SUCCESS method=RegisterTest.verifyThatErrorMessageIsDisplayedWhenCreatingUserWithUserNameThatIsAlreadyTaken()[pri:0, instance:tests.RegisterTest@7a92922] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setupTestCase(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.RegisterTest@7a92922]" name="setupTestCase" is-config="true" duration-ms="6675" started-at="2017-10-11T15:28:19Z" finished-at="2017-10-11T15:28:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Local]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WINDOWS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTestCase -->
        <test-method status="PASS" signature="verifyThatErrorMessageIsDisplayedWhenSendingDifferentPasswordsOnPasswordAndConfirmPasswordFields()[pri:0, instance:tests.RegisterTest@7a92922]" name="verifyThatErrorMessageIsDisplayedWhenSendingDifferentPasswordsOnPasswordAndConfirmPasswordFields" duration-ms="2278" started-at="2017-10-11T15:28:26Z" finished-at="2017-10-11T15:28:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThatErrorMessageIsDisplayedWhenSendingDifferentPasswordsOnPasswordAndConfirmPasswordFields -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegisterTest@7a92922]" name="afterMethod" is-config="true" duration-ms="1632" started-at="2017-10-11T15:28:28Z" finished-at="2017-10-11T15:28:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThatErrorMessageIsDisplayedWhenSendingDifferentPasswordsOnPasswordAndConfirmPasswordFields status=SUCCESS method=RegisterTest.verifyThatErrorMessageIsDisplayedWhenSendingDifferentPasswordsOnPasswordAndConfirmPasswordFields()[pri:0, instance:tests.RegisterTest@7a92922] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setupTestCase(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.RegisterTest@7a92922]" name="setupTestCase" is-config="true" duration-ms="6263" started-at="2017-10-11T15:28:30Z" finished-at="2017-10-11T15:28:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Local]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WINDOWS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTestCase -->
        <test-method status="FAIL" signature="verifyThatErrorMessageIsDisplayedWhenSendingInvalidEmailOnEmailField()[pri:0, instance:tests.RegisterTest@7a92922]" name="verifyThatErrorMessageIsDisplayedWhenSendingInvalidEmailOnEmailField" duration-ms="3317" started-at="2017-10-11T15:28:36Z" finished-at="2017-10-11T15:28:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at tests.RegisterTest.verifyThatErrorMessageIsDisplayedWhenSendingInvalidEmailOnEmailField(RegisterTest.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThatErrorMessageIsDisplayedWhenSendingInvalidEmailOnEmailField -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegisterTest@7a92922]" name="afterMethod" is-config="true" duration-ms="2025" started-at="2017-10-11T15:28:40Z" finished-at="2017-10-11T15:28:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThatErrorMessageIsDisplayedWhenSendingInvalidEmailOnEmailField status=FAILURE method=RegisterTest.verifyThatErrorMessageIsDisplayedWhenSendingInvalidEmailOnEmailField()[pri:0, instance:tests.RegisterTest@7a92922] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setupTestCase(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.RegisterTest@7a92922]" name="setupTestCase" is-config="true" duration-ms="6973" started-at="2017-10-11T15:28:42Z" finished-at="2017-10-11T15:28:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Local]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WINDOWS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTestCase -->
        <test-method status="PASS" signature="verifyThatRegisterPageIsDisplayedWhenClickingOnRegisterLink()[pri:0, instance:tests.RegisterTest@7a92922]" name="verifyThatRegisterPageIsDisplayedWhenClickingOnRegisterLink" duration-ms="1523" started-at="2017-10-11T15:28:49Z" finished-at="2017-10-11T15:28:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThatRegisterPageIsDisplayedWhenClickingOnRegisterLink -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegisterTest@7a92922]" name="afterMethod" is-config="true" duration-ms="1577" started-at="2017-10-11T15:28:50Z" finished-at="2017-10-11T15:28:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThatRegisterPageIsDisplayedWhenClickingOnRegisterLink status=SUCCESS method=RegisterTest.verifyThatRegisterPageIsDisplayedWhenClickingOnRegisterLink()[pri:0, instance:tests.RegisterTest@7a92922] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.RegisterTest@7a92922]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-10-11T15:28:52Z" finished-at="2017-10-11T15:28:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.RegisterTest -->
    </test> <!-- ChromeFunctionalTesting -->
  </suite> <!-- Automation Training No Grid -->
</testng-results>
